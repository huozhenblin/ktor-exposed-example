# For a quick start check out our HTTP Requests collection (Tools|HTTP Client|Open HTTP Requests Collection) or
# paste cURL into the file and request will be converted to HTTP Request format.
#
# Following HTTP Request Live Templates are available:
# * 'gtrp' and 'gtr' create a GET request with or without query parameters;
# * 'ptr' and 'ptrp' create a POST request with a simple or parameter-like body;
# * 'mptr' and 'fptr' create a POST request to submit a form with a text or file field (multipart/form-data);

# REGISTER
POST {{base-url}}/users
Content-Type: application/json

{
  "user": {
    "email": "drag1@gmail2.com",
    "username": "drag2",
    "password": "1234"
  }
}

> {%
 client.assert(typeof response.body.user.token !== "undefined", "No token returned");
 client.global.set("auth_token", response.body.user.token);
 %}

###

# CURRENT USER
GET {{base-url}}/user
Accept: application/json
Authorization: Token {{auth_token}}

###

# LOGIN
POST {{base-url}}/users/login
Content-Type: application/json

{
  "user": {
    "email": "drag1@gmail.com",
    "password": "1234"
  }
}

> {%
 client.assert(typeof response.body.user.token !== "undefined", "No token returned");
 client.global.set("auth_token", response.body.user.token);
 %}

###

# UPDATE USER
PUT {{base-url}}/user
Content-Type: application/json
Authorization: Token {{auth_token}}

{
  "user": {
    "bio": "I work here too",
    "image": "https://image2.com"
  }
}

###

# GET ALL USERS
GET {{base-url}}/users
Accept: application/json

###

# GET PROFILE - NOT AUTHENTICATED
GET {{base-url}}/profiles/drag2
Accept: application/json

###

# GET PROFILE - AUTHENTICATED
GET {{base-url}}/profiles/drag1
Accept: application/json
Authorization: Token {{auth_token}}

###

# FOLLOW USER
POST {{base-url}}/profiles/drag1/follow
Accept: application/json
Authorization: Token {{auth_token}}

###

# UNFOLLOW USER
DELETE {{base-url}}/profiles/drag1/follow
Accept: application/json
Authorization: Token {{auth_token}}

###

# CREATE ARTICLE
POST {{base-url}}/articles
Content-Type: application/json
Accept: application/json
Authorization: Token {{auth_token}}

{
  "article": {
    "title": "My puupy 2",
    "description": "is awesome",
    "body": "I love him 2",
    "tagList": [
      "home",
      "dragons"
    ]
  }
}

> {%
 if(response.body.article !== undefined && response.body.article.slug !== undefined)
   client.global.set("slug", response.body.article.slug);
 %}

###

# DROP DB

GET {{base-url}}/drop

###

# UPDATE ARTICLE
PUT {{base-url}}/articles/my-puupy-2
Accept: application/json
Content-Type: application/json
Authorization: Token {{auth_token}}

{
  "article": {
    "title": "How to train your dragon 4",
    "description": "Ever wonder how it happend?",
    "body": "You have to believe. Please"
  }
}

###

# GET ARTICLE
GET {{base-url}}/articles/my-puupy-2
Accept: application/json

###

# FAVORITE ARTICLE
POST {{base-url}}/articles/my-puupy-2/favorite
Accept: application/json
Authorization: Token {{auth_token}}

###

# UN-FAVORITE ARTICLE
DELETE {{base-url}}/articles/my-puupy-2/favorite
Accept: application/json
Authorization: Token {{auth_token}}

###

# DELETE ARTICLE
DELETE {{base-url}}/articles/how-to-train-your-dragon-23
Authorization: Token {{auth_token}}

###

# GET ALL TAGS
GET {{base-url}}/tags
Accept: application/json

###

# GET ARTICLES
GET {{base-url}}/articles
Authorization: Token {{auth_token}}

###


# GET FEED
GET {{base-url}}/articles/feed
Authorization: Token {{auth_token}}

###

# ADD COMMENT
POST {{base-url}}/articles/my-puupy-2/comments
Authorization: Token {{auth_token}}
Accept: application/json
Content-Type: application/json

{
  "comment": {
    "body": "sooo cute"
  }
}

###

# GET COMMENTS - AUTHORIZED
GET {{base-url}}/articles/my-puupy-2/comments
Authorization: Token {{auth_token}}
Accept: application/json

###

# GET COMMENTS - UN-AUTHORIZED
GET {{base-url}}/articles/my-puupy-2/comments
Accept: application/json

###

# DELETE COMMENT
DELETE {{base-url}}/articles/my-puupy-2/comments/3
Authorization: Token {{auth_token}}

###
